extensions:
  health_check:
  pprof:
  zpages:
    endpoint: 0.0.0.0:55679
  basicauth/otlp:
    client_auth:
      username: "447801"
      password: "${env:GRAFANA_CLOUD_KEY}"

receivers:
  # Receivers are available at 192.168.3.3
  otlp:
    protocols:
      grpc: # port 4317
      http: # port 4318

  # Used by treafik
  jaeger:
    protocols:
      thrift_compact: # port 6831
      thrift_http: # port 14268

  # Used by docker host
  fluentforward/docker:
    endpoint: 0.0.0.0:8006

  # Used by systemd
  fluentforward/systemd:
    endpoint: 0.0.0.0:8007

  # used by promtail
  loki/systemd:
    protocols:
      http:
        endpoint: 0.0.0.0:3100

processors:
  batch:
  attributes/fluent_docker:
    actions:
      - action: upsert
        key: source
        value: docker
      - action: extract # remove prefix "/" from container_name
        key: container_name
        pattern: "^[/](?P<container_name>.*)$"
      - action: insert
        key: loki.attribute.labels
        value: source, container_name
  attributes/fluent_systemd:
    actions:
      - action: upsert
        key: source
        value: systemd
      - action: insert
        key: loki.attribute.labels
        value: source, fluent.tag
  attributes/loki_systemd:
    actions:
      - action: upsert
        key: source
        value: systemd/loki
      - action: insert
        key: loki.attribute.labels
        value: source, unit

connectors:
  count:

exporters:
  file:
    path: /var/otel/otel-collector.log
    flush_interval: 1s

  # send to jaeger.heinrichhartmann.net
  otlp/jaeger:
    endpoint: "jaeger:4317"
    tls:
      insecure: true

  # send to local loki/Grafana
  loki:
    endpoint: "http://192.168.3.4:3100/loki/api/v1/push"

  # send to Grafana Cloud
  otlphttp/grafanacloud:
    auth:
      authenticator: basicauth/otlp
    endpoint: "https://otlp-gateway-prod-eu-west-0.grafana.net/otlp"

  # For some reason otlp/grafanacloud does reject the logs. We use a loki exporter instead
  loki/grafanacloud:
    endpoint: ${env:GRAFANA_CLOUD_LOKI_URL}

  # send to LightStep Saas
  otlp/ls:
     endpoint: ingest.lightstep.com:443
     headers:
       "lightstep-access-token" : ${env:LIGHTSTEP_TOKEN}

  prometheus:
    endpoint: 0.0.0.0:1234

  otlp/dash0:
    endpoint: "ingress.eu-west-1.aws.dash0.com:4317"
    headers:
      Authorization: "Bearer auth_M9P9D4rxXiiSL5QcTmEWspzwtkqYmnm4"
      "Dash0-Dataset": "default"

service:
  extensions: [health_check, pprof, zpages, basicauth/otlp]
  pipelines:
    traces/jaeger:
      receivers: [jaeger]
      processors: [batch]
      exporters: [otlp/jaeger, otlphttp/grafanacloud, otlp/ls, count, otlp/dash0]
    traces/otlp:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlp/jaeger, otlphttp/grafanacloud, otlp/ls, count, otlp/dash0]
    logs/docker:
      receivers: [fluentforward/docker]
      processors: [batch, attributes/fluent_docker]
      exporters: [loki, loki/grafanacloud, count, otlp/dash0]
    logs/systemd:
      receivers: [fluentforward/systemd]
      processors: [batch, attributes/fluent_systemd]
      exporters: [loki, loki/grafanacloud, count, otlp/dash0]
    logs/loki:
      receivers: [loki/systemd]
      processors: [batch, attributes/loki_systemd]
      exporters: [loki, otlphttp/grafanacloud, count, otlp/dash0]
    logs/otel:
      receivers: [otlp]
      processors: [batch]
      exporters: [loki, otlphttp/grafanacloud, count, otlp/dash0]
    metrics/count:
      receivers: [count]
      exporters: [prometheus, otlp/dash0]
